plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android-extensions'

}
//apply plugin: 'kotlin-android'


android {
    signingConfigs {
//        debug {
//            storeFile file('../signing_config/keystore.jks')
//            keyAlias 'maccess'
//            storePassword 'mattendence@2022'
//            keyPassword 'mattendence@2022'
//        }
        release {
//            storeFile file('../signing_config/keystore.jks')
//            storePassword 'mattendence@2022'
//            keyAlias 'maccess'
//            keyPassword 'mattendence@2022'
        }
    }
    compileSdk 33

    defaultConfig {
        applicationId "technology.innovate.haziremployee"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            debuggable true
            manifestPlaceholders = [crashlytics:"false"]
            buildConfigField 'Boolean', 'enableCrashlytics', 'false'
        }
        release {
            crunchPngs false
            minifyEnabled false
            manifestPlaceholders = [crashlytics:"true"]
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

    flavorDimensions "Full"
    productFlavors {
        staging {
            dimension "Full"
        }
        production {
            dimension "Full"
        }
    }

    applicationVariants.all { variant ->
        if (variant.flavorName == 'staging') {
            buildConfigField "String", "BASE_URL", '"http://hazir-hr.ae/api/public/api/"'
        } else if (variant.flavorName == 'production') {
            buildConfigField "String", "BASE_URL", '"http://hazir-hr.ae/api/public/api/"'
            //buildConfigField "String", "BASE_URL", '"https://2602-2401-4900-1c5c-5bf6-78a5-e1d9-6952-8cc1.ngrok-free.app/api/"'
          //  buildConfigField "String", "BASE_URL", '"https://dubaileading.technology/demo/maccess-saas/api/public/api/"'
          // buildConfigField "String", "BASE_URL", '"http://staging.dubaileading.technology/maccess-saas/api/public/api/"'

        }

        variant.outputs.all {
            def pointedTo = variant.flavorName
            def buildVariant = variant.buildType.name
            outputFileName = "${pointedTo}_${buildVariant}_${versionName}_.apk"
        }
    }
    dataBinding {
        enabled = true
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.databinding:viewbinding:7.3.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.8'

    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.libraries.places:places:3.0.0'

    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.25'

    implementation platform('com.google.firebase:firebase-bom:32.2.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-messaging:23.2.0'

    implementation 'com.github.bumptech.glide:glide:4.13.2'
    kapt 'com.github.bumptech.glide:compiler:4.13.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.2'

    implementation("io.coil-kt:coil:2.1.0")

    implementation 'com.intuit.sdp:sdp-android:1.1.0'
    implementation 'com.intuit.ssp:ssp-android:1.1.0'
    implementation("com.google.android.play:app-update-ktx:2.0.1")
    implementation project(':picker')
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    implementation("com.google.dagger:hilt-android:2.42")
    kapt("com.google.dagger:hilt-android-compiler:2.42")
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"
    implementation 'com.intuit.sdp:sdp-android:1.1.0'
    implementation 'com.intuit.ssp:ssp-android:1.1.0'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation "com.airbnb.android:lottie:4.0.0"

    //Pagination
    def paging_version = "3.1.1"
    implementation("androidx.paging:paging-runtime-ktx:$paging_version")
    implementation "androidx.paging:paging-compose:1.0.0-alpha17"

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0'
    //Hilt
    implementation("com.google.dagger:hilt-android:2.39")
    kapt("com.google.dagger:hilt-android-compiler:2.38.1")
    implementation 'de.hdodenhof:circleimageview:3.1.0'

}
